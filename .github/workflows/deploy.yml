name: Deploy

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: self-hosted
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build Docker image
        shell: powershell
        run: |
          docker build -t file-storage:latest .

      - name: Create environment file
        shell: powershell
        env:
          DB_HOST: 'host.docker.internal'
          DB_PORT: '5432'
          DB_USERNAME: ${{ secrets.DB_USERNAME }}
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_DATABASE: ${{ secrets.DB_DATABASE }}
          FILE_STORAGE_PATH: '/app/storage'
        run: |
          @"
          DB_HOST=${env:DB_HOST}
          DB_PORT=${env:DB_PORT}
          DB_USERNAME=${env:DB_USERNAME}
          DB_PASSWORD=${env:DB_PASSWORD}
          DB_DATABASE=${env:DB_DATABASE}
          NODE_ENV=production
          PORT=3001
          FILE_STORAGE_PATH=${env:FILE_STORAGE_PATH}
          "@ | Out-File -FilePath .env -Encoding utf8

      - name: Run database migrations
        shell: powershell
        run: |
          docker run --rm `
            --env-file .env `
            file-storage:latest `
            npm run migration:run

      - name: Deploy file storage container
        shell: powershell
        run: |
          $containerExists = docker ps -a --filter "name=file-storage" --format "{{.Names}}"
          if ($containerExists) {
            Write-Host "Stopping existing container"
            docker stop file-storage
            docker rm file-storage
          } else {
            Write-Host "Container doesn't exist, continuing..."
          }

          docker run -d `
            --name file-storage `
            -p 3001:3001 `
            --env-file .env `
            --add-host=host.docker.internal:host-gateway `
            --restart unless-stopped `
            -v "Y:/FileStorage:/app/storage" `
            file-storage:latest `
            npm run start:prod

          docker ps -a

          docker image prune -f
          Remove-Item .env
